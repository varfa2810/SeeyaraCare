@using GarageDomain.Entities.Authentication
@model OtpRequest

@{
    ViewBag.Title = "Verify OTP";
}


<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-6">
            <div class="card border-light mb-3 shadow-lg">
                <div class="card-body p-4">
                    <h2 class="text-center display-6">Verify OTP</h2>

                    @if (!string.IsNullOrEmpty(TempData["Error"] as string))
                    {
                        <div class="alert alert-danger d-flex align-items-center mt-3" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            <div>@TempData["Error"]</div>
                        </div>
                    }

                    <form method="post" asp-action="VerifyOTP" asp-controller="Authentication" novalidate class="needs-validation mt-4">
                        @Html.AntiForgeryToken()

                        <div class="form-group form-floating mb-3">
                            <input asp-for="OTP" class="form-control" id="Otp" placeholder="Enter OTP sent to your registered email" required />
                            <label asp-for="OTP">OTP</label>
                            <div class="invalid-feedback">
                                OTP is required.
                            </div>
                        </div>

                        <p class="mt-2 text-center">
                            <a href="#" class="link-info disabled text-decoration-underline" id="resendOtpBtn">Resend OTP</a> in
                            <span id="otpTimer">5</span> seconds
                        </p>

                        <div class="d-flex justify-content-center">
                            <button type="submit" class="btn btn-success mt-2 px-5">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
                (() => {
          'use strict'

          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll('.needs-validation')

          // Loop over them and prevent submission
          Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }

              form.classList.add('was-validated')
            }, false)
          })
        })()
    </script>


}